package laya.debug.divui 
{
	import laya.debug.tools.Base64Tool;
	import laya.utils.Browser;
	/**
	 * ...
	 * @author ww
	 */
	public class DivScripts 
	{
		
		public function DivScripts() 
		{
			
		}
		public static var data:String = "function dhtmlxEvent(e,t,i){e.addEventListener?e.addEventListener(t,i,!1):e.attachEvent&&e.attachEvent("on"+t,i)}function dhtmlXTreeObject(e,t,i,n){if(dhtmlxEvent.initTouch&&dhtmlxEvent.initTouch(),_isIE)try{document.execCommand("BackgroundImageCache",!1,!0)}catch(o){}"object"!=typeof e?this.parentObject=document.getElementById(e):this.parentObject=e,this.parentObject.style.overflow="hidden",this._itim_dg=!0,this.dlmtr=",",this.dropLower=!1,this.enableIEImageFix(!0),this.xmlstate=0,this.mytype="tree",this.smcheck=!0,this.width=t,this.height=i,this.rootId=n,this.childCalc=null,this.def_img_x="18px",this.def_img_y="18px",this.def_line_img_x="18px",this.def_line_img_y="24px",this._dragged=new Array,this._selected=new Array,this.style_pointer="pointer",this._aimgs=!0,this.htmlcA=" [",this.htmlcB="]",this.lWin=window,this.cMenu=0,this.mlitems=0,this.iconURL="",this.dadmode=0,this.slowParse=!1,this.autoScroll=!0,this.hfMode=0,this.nodeCut=new Array,this.XMLsource=0,this.XMLloadingWarning=0,this._idpull={},this._pullSize=0,this.treeLinesOn=!0,this.tscheck=!1,this.timgen=!0,this.dpcpy=!1,this._ld_id=null,this._dynDeleteBranches={},this._oie_onXLE=[],this.imPath=window.dhx_globalImgPath||"",this.checkArray=new Array("iconUncheckAll.gif","iconCheckAll.gif","iconCheckGray.gif","iconUncheckDis.gif","iconCheckDis.gif","iconCheckDis.gif"),this.radioArray=new Array("radio_off.gif","radio_on.gif","radio_on.gif","radio_off.gif","radio_on.gif","radio_on.gif"),this.lineArray=new Array("line2.gif","line3.gif","line4.gif",blank_base64,blank_base64,"line1.gif"),this.minusArray=new Array("minus2.gif","minus3.gif","minus4.gif","data:image/gif;base64,R0lGODlhEgAYAJECALGvrZ6dnfT09AAAACH5BAEAAAIALAAAAAASABgAAAIclI+py+0Po5y0WhsCDWB3mGXfwwHmhabqyrZTAQA7","minus5.gif"),this.plusArray=new Array("plus2.gif","plus3.gif","plus4.gif","data:image/gif;base64,R0lGODlhEgAYAJECAKGgn7GvrfT09AAAACH5BAEAAAIALAAAAAASABgAAAIclI+py+0Po5y0UnBDyHsCLQFfOE6dhabqyrZJAQA7","plus5.gif"),this.imageArray=new Array("data:image/gif;base64,R0lGODlhEgASAKECAJeXl7Gvrf///////yH5BAEKAAIALAAAAAASABIAAAIzlI+pAu29DAi01jiTXRnNm3THB45BaJ2eulBoxLCS/K6wON80Xpt6r+B9HkSaIIWEKQ0FADs=","data:image/gif;base64,R0lGODlhEgASAKECAJeXl7Gvrf///////yH5BAEKAAIALAAAAAASABIAAAIzlI+pywcPm3mhWgkCsjBOvVkimElG9ZlCBlXd+2XjjLKg5GqoeZXqvsOQXK/ijUZTKVUFADs=","data:image/gif;base64,R0lGODlhEgASAKECAJeXl7Gvrf///////yH5BAEKAAIALAAAAAASABIAAAIwlI+pywcPm3mhWgkCsjBOvVkimElG9ZlCuYIY6TYs+6bmHDO4igfdD3GNhheV0VQAADs="),this.cutImg=new Array(0,0,0),this.cutImage="but_cut.gif",dhx4._eventable(this),this.htmlNode=new dhtmlXTreeItemObject(this.rootId,"",0,this),this.htmlNode.htmlNode.childNodes[0].childNodes[0].style.display="none",this.htmlNode.htmlNode.childNodes[0].childNodes[0].childNodes[0].className="hiddenRow",this.allTree=this._createSelf(),this.allTree.appendChild(this.htmlNode.htmlNode),dhtmlx.$customScroll&&dhtmlx.CustomScroll.enable(this),_isFF&&(this.allTree.childNodes[0].width="100%",this.allTree.childNodes[0].style.overflow="hidden");var r=this;if(this.allTree.onselectstart=new Function("return false;"),_isMacOS&&(this.allTree.oncontextmenu=function(e){return r._doContClick(e||window.event,!0)}),this.allTree.onmousedown=function(e){return r._doContClick(e||window.event)},this.XMLLoader=this._parseXMLTree,_isIE&&this.preventIECashing(!0),this.selectionBar=document.createElement("DIV"),this.selectionBar.className="selectionBar",this.selectionBar.innerHTML="&nbsp;",this.selectionBar.style.display="none",this.allTree.appendChild(this.selectionBar),window.addEventListener&&window.addEventListener("unload",function(){try{r.destructor()}catch(e){}},!1),window.attachEvent&&window.attachEvent("onunload",function(){try{r.destructor()}catch(e){}}),this.setImagesPath=this.setImagePath,this.setIconsPath=this.setIconPath,this.setSkin("material"),dhtmlx.image_path){var l=dhtmlx.image_path,s=this.parentObject.className.match(/dhxtree_dhx_([a-z_]*)/i);null!=s&&null!=s[1]&&(l+="dhxtree_"+s[1]+"/"),this.setImagePath(l)}return this}function cObject(){return this}function dhtmlXTreeItemObject(e,t,i,n,o,r){return this.htmlNode="",this.acolor="",this.scolor="",this.tr=0,this.childsCount=0,this.tempDOMM=0,this.tempDOMU=0,this.dragSpan=0,this.dragMove=0,this.span=0,this.closeble=1,this.childNodes=new Array,this.userData=new cObject,this.checkstate=0,this.treeNod=n,this.label=t,this.parentObject=i,this.actionHandler=o,this.images=new Array(n.imageArray[0],n.imageArray[1],n.imageArray[2]),this.id=n._globalIdStorageAdd(e,this),this.treeNod.checkBoxOff?this.htmlNode=this.treeNod._createItem(1,this,r):this.htmlNode=this.treeNod._createItem(0,this,r),this.htmlNode.objBelong=this,this}function jsonPointer(e,t){this.d=e,this.dp=t}function dhx_init_trees(){for(var e=document.getElementsByTagName("div"),t=0;t<e.length;t++)"dhtmlxTree"==e[t].className&&dhtmlXTreeFromHTML(e[t])}var blank_base64="data:image/gif;base64,R0lGODlhEgASAIAAAP///////yH5BAUUAAEALAAAAAASABIAAAIPjI+py+0Po5y02ouz3pwXADs=";"undefined"==typeof window.dhx&&(window.dhx=window.dhx4={version:"5.0",skin:null,lastId:1,newId:function(){return this.lastId++},zim:{data:{},step:5,first:function(){return 100},last:function(){var e=this.first();for(var t in this.data)e=Math.max(e,this.data[t]);return e},reserve:function(e){return this.data[e]=this.last()+this.step,this.data[e]},clear:function(e){null!=this.data[e]&&(this.data[e]=null,delete this.data[e])}},s2b:function(e){return"string"==typeof e&&(e=e.toLowerCase()),1==e||1==e||"true"==e||"1"==e||"yes"==e||"y"==e||"on"==e},s2j:function(s){var obj=null;dhx4.temp=null;try{eval("dhx4.temp="+s)}catch(e){dhx4.temp=null}return obj=dhx4.temp,dhx4.temp=null,obj},absLeft:function(e){return"string"==typeof e&&(e=document.getElementById(e)),this.getOffset(e).left},absTop:function(e){return"string"==typeof e&&(e=document.getElementById(e)),this.getOffset(e).top},_aOfs:function(e){for(var t=0,i=0;e;)t+=parseInt(e.offsetTop),i+=parseInt(e.offsetLeft),e=e.offsetParent;return{top:t,left:i}},_aOfsRect:function(e){var t=e.getBoundingClientRect(),i=document.body,n=document.documentElement,o=window.pageYOffset||n.scrollTop||i.scrollTop,r=window.pageXOffset||n.scrollLeft||i.scrollLeft,l=n.clientTop||i.clientTop||0,s=n.clientLeft||i.clientLeft||0,a=t.top+o-l,d=t.left+r-s;return{top:Math.round(a),left:Math.round(d)}},getOffset:function(e){return e.getBoundingClientRect?this._aOfsRect(e):this._aOfs(e)},_isObj:function(e){return null!=e&&"object"==typeof e&&"undefined"==typeof e.length},_copyObj:function(e){if(this._isObj(e)){var t={};for(var i in e)"object"==typeof e[i]&&null!=e[i]?t[i]=this._copyObj(e[i]):t[i]=e[i]}else for(var t=[],i=0;i<e.length;i++)"object"==typeof e[i]&&null!=e[i]?t[i]=this._copyObj(e[i]):t[i]=e[i];return t}},window.dhx4.isIE=navigator.userAgent.indexOf("MSIE")>=0||navigator.userAgent.indexOf("Trident")>=0,window.dhx4.isIE6=null==window.XMLHttpRequest&&navigator.userAgent.indexOf("MSIE")>=0,window.dhx4.isIE7=navigator.userAgent.indexOf("MSIE 7.0")>=0&&navigator.userAgent.indexOf("Trident")<0,window.dhx4.isIE8=navigator.userAgent.indexOf("MSIE 8.0")>=0&&navigator.userAgent.indexOf("Trident")>=0,window.dhx4.isIE9=navigator.userAgent.indexOf("MSIE 9.0")>=0&&navigator.userAgent.indexOf("Trident")>=0,window.dhx4.isIE10=navigator.userAgent.indexOf("MSIE 10.0")>=0&&navigator.userAgent.indexOf("Trident")>=0&&1!=window.navigator.pointerEnabled,window.dhx4.isIE11=navigator.userAgent.indexOf("Trident")>=0&&1==window.navigator.pointerEnabled,window.dhx4.isEdge=navigator.userAgent.indexOf("Edge")>=0,window.dhx4.isOpera=navigator.userAgent.indexOf("Opera")>=0,window.dhx4.isChrome=navigator.userAgent.indexOf("Chrome")>=0&&!window.dhx4.isEdge,window.dhx4.isKHTML=(navigator.userAgent.indexOf("Safari")>=0||navigator.userAgent.indexOf("Konqueror")>=0)&&!window.dhx4.isEdge,window.dhx4.isFF=navigator.userAgent.indexOf("Firefox")>=0,window.dhx4.isIPad=navigator.userAgent.search(/iPad/gi)>=0,window.dhx4.dnd={evs:{},p_en:(window.dhx4.isIE||window.dhx4.isEdge)&&(window.navigator.pointerEnabled||window.navigator.msPointerEnabled),_mTouch:function(e){return window.dhx4.isIE10&&e.pointerType==e.MSPOINTER_TYPE_MOUSE||window.dhx4.isIE11&&"mouse"==e.pointerType||window.dhx4.isEdge&&"mouse"==e.pointerType},_touchOn:function(e){null==e&&(e=document.body),e.style.touchAction=e.style.msTouchAction="",e=null},_touchOff:function(e){null==e&&(e=document.body),e.style.touchAction=e.style.msTouchAction="none",e=null}},1==window.navigator.pointerEnabled?window.dhx4.dnd.evs={start:"pointerdown",move:"pointermove",end:"pointerup"}:1==window.navigator.msPointerEnabled?window.dhx4.dnd.evs={start:"MSPointerDown",move:"MSPointerMove",end:"MSPointerUp"}:"undefined"!=typeof window.addEventListener&&(window.dhx4.dnd.evs={start:"touchstart",move:"touchmove",end:"touchend"})),"undefined"==typeof window.dhx4._eventable&&(window.dhx4._eventable=function(e,t){return"clear"==t?(e.detachAllEvents(),e.dhxevs=null,e.attachEvent=null,e.detachEvent=null,e.checkEvent=null,e.callEvent=null,e.detachAllEvents=null,void(e=null)):(e.dhxevs={data:{}},e.attachEvent=function(e,t){e=String(e).toLowerCase(),this.dhxevs.data[e]||(this.dhxevs.data[e]={});var i=window.dhx4.newId();return this.dhxevs.data[e][i]=t,i},e.detachEvent=function(e){for(var t in this.dhxevs.data){var i=0;for(var n in this.dhxevs.data[t])n==e?(this.dhxevs.data[t][n]=null,delete this.dhxevs.data[t][n]):i++;0==i&&(this.dhxevs.data[t]=null,delete this.dhxevs.data[t])}},e.checkEvent=function(e){return e=String(e).toLowerCase(),null!=this.dhxevs.data[e]},e.callEvent=function(e,t){if(e=String(e).toLowerCase(),null==this.dhxevs.data[e])return!0;var i=!0;for(var n in this.dhxevs.data[e])i=this.dhxevs.data[e][n].apply(this,t)&&i;return i},e.detachAllEvents=function(){for(var e in this.dhxevs.data){for(var t in this.dhxevs.data[e])this.dhxevs.data[e][t]=null,delete this.dhxevs.data[e][t];this.dhxevs.data[e]=null,delete this.dhxevs.data[e]}},void(e=null))},dhx4._eventable(dhx4)),"undefined"==typeof window.dhtmlx&&(window.dhtmlx={extend:function(e,t){for(var i in t)e[i]||(e[i]=t[i]);return e},extend_api:function(e,t,i){var n=window[e];n&&(window[e]=function(e){if(e&&"object"==typeof e&&!e.tagName){var i=n.apply(this,t._init?t._init(e):arguments);for(var o in dhtmlx)t[o]&&this[t[o]](dhtmlx[o]);for(var o in e)t[o]?this[t[o]](e[o]):0===o.indexOf("on")&&this.attachEvent(o,e[o])}else var i=n.apply(this,arguments);return t._patch&&t._patch(this),i||this},window[e].prototype=n.prototype,i&&dhtmlx.extend(window[e].prototype,i))},url:function(e){return-1!=e.indexOf("?")?"&":"?"}}),_isFF=!1,_isIE=!1,_isOpera=!1,_isKHTML=!1,_isMacOS=!1,_isChrome=!1,_FFrv=!1,_KHTMLrv=!1,_OperaRv=!1,-1!=navigator.userAgent.indexOf("Macintosh")&&(_isMacOS=!0),navigator.userAgent.toLowerCase().indexOf("chrome")>-1&&(_isChrome=!0),-1!=navigator.userAgent.indexOf("Safari")||-1!=navigator.userAgent.indexOf("Konqueror")?(_KHTMLrv=parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf("Safari")+7,5)),_KHTMLrv>525?(_isFF=!0,_FFrv=1.9):_isKHTML=!0):-1!=navigator.userAgent.indexOf("Opera")?(_isOpera=!0,_OperaRv=parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf("Opera")+6,3))):-1!=navigator.appName.indexOf("Microsoft")?(_isIE=!0,(-1!=navigator.appVersion.indexOf("MSIE 8.0")||-1!=navigator.appVersion.indexOf("MSIE 9.0")||-1!=navigator.appVersion.indexOf("MSIE 10.0")||document.documentMode>7)&&"BackCompat"!=document.compatMode&&(_isIE=8)):"Netscape"==navigator.appName&&-1!=navigator.userAgent.indexOf("Trident")?_isIE=8:(_isFF=!0,_FFrv=parseFloat(navigator.userAgent.split("rv:")[1])),"undefined"==typeof window.dhtmlxEvent,null==dhtmlxEvent.touchDelay&&(dhtmlxEvent.touchDelay=2e3),"undefined"==typeof dhtmlxEvent.initTouch&&(dhtmlxEvent.initTouch=function(){function e(){if(i){var e=document.createEvent("HTMLEvents");e.initEvent("dblclick",!0,!0),i.dispatchEvent(e),t=i=null}}var t,i,n,o;dhtmlxEvent(document.body,"touchstart",function(r){i=r.touches[0].target,n=r.touches[0].clientX,o=r.touches[0].clientY,t=window.setTimeout(e,dhtmlxEvent.touchDelay)}),dhtmlxEvent(document.body,"touchmove",function(e){t&&(Math.abs(e.touches[0].clientX-n)>50||Math.abs(e.touches[0].clientY-o)>50)&&(window.clearTimeout(t),t=i=!1)}),dhtmlxEvent(document.body,"touchend",function(e){t&&(window.clearTimeout(t),t=i=!1)}),dhtmlxEvent.initTouch=function(){}}),dhtmlXTreeObject.prototype._doContClick=function(e,t){if(!t&&2!=e.button)return this._acMenu&&(this._acMenu.hideContextMenu?this._acMenu.hideContextMenu():this.cMenu._contextEnd()),!0;for(var i=_isIE?e.srcElement:e.target;i&&"BODY"!=i.tagName&&!i.parentObject;)i=i.parentNode;if(!i||!i.parentObject)return!0;var n=i.parentObject;if(this.callEvent("onRightClick",[n.id,e])||((e.srcElement||e.target).oncontextmenu=function(e){return(e||event).cancelBubble=!0,!1}),this._acMenu=n.cMenu||this.cMenu,this._acMenu){if(!this.callEvent("onBeforeContextMenu",[n.id]))return!0;if(_isMacOS||((e.srcElement||e.target).oncontextmenu=function(e){return(e||event).cancelBubble=!0,!1}),this._acMenu.showContextMenu){var o=window.document.documentElement,r=window.document.body,l=new Array(o.scrollLeft||r.scrollLeft,o.scrollTop||r.scrollTop);if(_isIE)var s=e.clientX+l[0],a=e.clientY+l[1];else var s=e.pageX,a=e.pageY;this._acMenu.showContextMenu(s-1,a-1),this.contextID=n.id,e.cancelBubble=!0,this._acMenu._skip_hide=!0}else i.contextMenuId=n.id,i.contextMenu=this._acMenu,i.a=this._acMenu._contextStart,i.a(i,e),i.a=null;return!1}return!0},dhtmlXTreeObject.prototype.enableIEImageFix=function(e){e?(this._getImg=function(){var e=document.createElement("DIV");return e.innerHTML="&nbsp;",e.className="dhx_bg_img_fix",e},this._setSrc=function(e,t){e.style.backgroundImage="url("+t+")"},this._getSrc=function(e){var t=e.style.backgroundImage;return t.substr(4,t.length-5).replace(/(^")|("$)/g,"")}):(this._getImg=function(e){return document.createElement(e==this.rootId?"div":"img")},this._setSrc=function(e,t){e.src=t},this._getSrc=function(e){return e.src})},dhtmlXTreeObject.prototype.destructor=function(){for(var e in this._idpull){var t=this._idpull[e];t&&(t.parentObject=null,t.treeNod=null,t.childNodes=null,t.span=null,t.tr.nodem=null,t.tr=null,t.htmlNode.objBelong=null,t.htmlNode=null,this._idpull[e]=null)}this.parentObject.innerHTML="",this.allTree.onselectstart=null,this.allTree.oncontextmenu=null,this.allTree.onmousedown=null;for(var e in this)this[e]=null},cObject.prototype=new Object,cObject.prototype.clone=function(){function e(){}return e.prototype=this,new e},dhtmlXTreeObject.prototype._globalIdStorageAdd=function(e,t){return this._globalIdStorageFind(e,1,1)?(e=e+"_"+(new Date).valueOf(),this._globalIdStorageAdd(e,t)):(this._idpull[e]=t,this._pullSize++,e)},dhtmlXTreeObject.prototype._globalIdStorageSub=function(e){this._idpull[e]&&(this._unselectItem(this._idpull[e]),this._idpull[e]=null,this._pullSize--),this._locker&&this._locker[e]&&(this._locker[e]=!1)},dhtmlXTreeObject.prototype._globalIdStorageFind=function(e,t,i,n){var o=this._idpull[e];if(o){if(o.unParsed&&!i&&this.reParse(o,0),this._srnd&&!o.htmlNode&&this._buildSRND(o,i),n&&this._edsbpsA)for(var r=0;r<this._edsbpsA.length;r++)if(this._edsbpsA[r][2]==e)return dhx4.callEvent("ongetItemError",["Requested item still in parsing process.",e]),null;return o}return this.slowParse&&0!=e&&!t?this.preParse(e):null},dhtmlXTreeObject.prototype._drawNewTr=function(e,t){var i=document.createElement("tr"),n=document.createElement("td"),o=document.createElement("td");return n.appendChild(document.createTextNode(" ")),o.colSpan=3,o.appendChild(e),i.appendChild(n),i.appendChild(o),i},dhtmlXTreeObject.prototype.parse=function(e,t,i){if("string"==typeof t&&(i=t,t=null),"json"===i)return this._loadJSONObject(e,t);if("csv"===i)return this._loadCSVString(e,t);if("jsarray"===i)return this._loadJSArray(e,t);var n=this;this.parsCount||this.callEvent("onXLS",[n,null]),this.xmlstate=1,this.XMLLoader({responseXML:dhx4.ajax.parse(e)},t)},dhtmlXTreeObject.prototype._attachChildNode=function(e,t,i,n,o,r,l,s,a,d,h){d&&d.parentObject&&(e=d.parentObject),0==e.XMLload&&this.XMLsource&&!this.XMLloadingWarning&&(e.XMLload=1,this._loadDynXML(e.id));var c=e.childsCount,u=e.childNodes;if(h&&h.tr.previousSibling&&(h.tr.previousSibling.previousSibling?d=h.tr.previousSibling.nodem:s=s.replace("TOP","")+",TOP"),d){var p,_;for(p=0;c>p;p++)if(u[p]==d){for(_=c;_!=p;_--)u[1+_]=u[_];break}p++,c=p}if(s)for(var m=s.split(","),g=0;g<m.length;g++)switch(m[g]){case"TOP":for(e.childsCount>0&&(d=new Object,d.tr=e.childNodes[0].tr.previousSibling),e._has_top=!0,p=c;p>0;p--)u[p]=u[p-1];c=0}var f;(f=this._idpull[t])&&-1==f.span||(f=u[c]=new dhtmlXTreeItemObject(t,i,e,this,n,1),t=u[c].id,e.childsCount++),f.htmlNode||(f.label=i,f.htmlNode=this._createItem(this.checkBoxOff?1:0,f),f.htmlNode.objBelong=f),o&&(f.images[0]=o),r&&(f.images[1]=r),l&&(f.images[2]=l);var b=this._drawNewTr(f.htmlNode);if((this.XMLloadingWarning||this._hAdI)&&(f.htmlNode.parentNode.parentNode.style.display="none"),d&&d.tr&&d.tr.nextSibling?e.htmlNode.childNodes[0].insertBefore(b,d.tr.nextSibling):this.parsingOn==e.id?this.parsedArray[this.parsedArray.length]=b:e.htmlNode.childNodes[0].appendChild(b),d&&!d.span&&(d=null),this.XMLsource&&(a&&0!=a?f.XMLload=0:f.XMLload=1),f.tr=b,b.nodem=f,0==e.itemId&&(b.childNodes[0].className="hiddenRow"),(e._r_logic||this._frbtr)&&this._setSrc(f.htmlNode.childNodes[0].childNodes[0].childNodes[1].childNodes[0],this.imPath+this.radioArray[0]),s)for(var m=s.split(","),g=0;g<m.length;g++)switch(m[g]){case"SELECT":this.selectItem(t,!1);break;case"CALL":this.selectItem(t,!0);break;case"CHILD":f.XMLload=0;break;case"CHECKED":this.XMLloadingWarning?this.setCheckList+=this.dlmtr+t:this.setCheck(t,1);break;case"HCHECKED":this._setCheck(f,"unsure");break;case"OPEN":f.openMe=1}if(!this.XMLloadingWarning&&(this._getOpenState(e)<0&&!this._hAdI&&this.openItem(e.id),d&&(this._correctPlus(d),this._correctLine(d)),this._correctPlus(e),this._correctLine(e),this._correctPlus(f),e.childsCount>=2&&(this._correctPlus(u[e.childsCount-2]),this._correctLine(u[e.childsCount-2])),2!=e.childsCount&&this._correctPlus(u[0]),this.tscheck&&this._correctCheckStates(e),this._onradh))if(1==this.xmlstate){var v=this.onXLE;this.onXLE=function(e){this._onradh(t),v&&v(e)}}else this._onradh(t);return f},dhtmlXTreeObject.prototype._parseItem=function(e,t,i,n){var o;if(this._srnd&&(!this._idpull[o=e.get("id")]||!this._idpull[o].span))return void this._addItemSRND(t.id,o,e);var r=e.get_all();if("object"==typeof this.waitUpdateXML&&!this.waitUpdateXML[r.id])return void this._parse(e,r.id,1);null!==r.text&&"undefined"!=typeof r.text||(r.text=e.sub("itemtext"),r.text&&(r.text=r.text.content()));var l=[];if(r.select&&l.push("SELECT"),r.top&&l.push("TOP"),r.call&&(this.nodeAskingCall=r.id),-1==r.checked?l.push("HCHECKED"):r.checked&&l.push("CHECKED"),r.open&&l.push("OPEN"),this.waitUpdateXML)if(this._globalIdStorageFind(r.id))var s=this.updateItem(r.id,r.text,r.im0,r.im1,r.im2,r.checked,r.child);else{0==this.npl?l.push("TOP"):i=t.childNodes[this.npl];var s=this._attachChildNode(t,r.id,r.text,0,r.im0,r.im1,r.im2,l.join(","),r.child,0,i);r.id=s.id,i=null}else var s=this._attachChildNode(t,r.id,r.text,0,r.im0,r.im1,r.im2,l.join(","),r.child,n||0,i);if(r.tooltip&&(s.span.parentNode.parentNode.title=r.tooltip),r.style&&(s.span.style.cssText?s.span.style.cssText+=";"+r.style:s.span.setAttribute("style",s.span.getAttribute("style")+"; "+r.style)),r.radio&&(s._r_logic=!0),r.nocheckbox){var a=s.span.parentNode.previousSibling.previousSibling;a.style.display="none",s.nocheckbox=!0}r.disabled&&(null!=r.checked&&this._setCheck(s,r.checked),this.disableCheckbox(s,1)),s._acc=r.child||0,this.parserExtension&&this.parserExtension._parseExtension.call(this,e,r,t?t.id:0),this.setItemColor(s,r.aCol,r.sCol),"1"==r.locked&&this.lockItem(s.id,!0,!0),(r.imwidth||r.imheight)&&this.setIconSize(r.imwidth,r.imheight,s),"0"!=r.closeable&&"1"!=r.closeable||this.setItemCloseable(s,r.closeable);var d="";r.topoffset&&this.setItemTopOffset(s,r.topoffset),this.slowParse&&"object"!=typeof this.waitUpdateXML?(!s.childsCount&&e.sub_exists("item")&&(s.unParsed=e.clone()),e.each("userdata",function(e){this.setUserData(r.id,e.get("name"),e.content())},this)):e.sub_exists("item")&&(d=this._parse(e,r.id,1)),""!=d&&(this.nodeAskingCall=d),e.each("userdata",function(t){this.setUserData(e.get("id"),t.get("name"),t.content())},this)},dhtmlXTreeObject.prototype._parse=function(e,t,i,n){if(this._srnd&&!this.parentObject.offsetHeight){var o=this;return window.setTimeout(function(){o._parse(e,t,i,n)},100)}if(e.exists()){if(this.skipLock=!0,!t){t=e.get("id"),this._dynDeleteBranches[t]&&(this.deleteChildItems(t),this._dynDeleteBranches[t]--,this._dynDeleteBranches[t]||delete this._dynDeleteBranches[t]);var r=e.get("dhx_security");r&&(dhtmlx.security_key=r),e.get("radio")&&(this.htmlNode._r_logic=!0),this.parsingOn=t,this.parsedArray=new Array,this.setCheckList="",this.nodeAskingCall=""}var l=this._globalIdStorageFind(t);if(!l)return dhx4.callEvent("onDataStructureError",["XML refers to not existing parent"]);if(this.parsCount=this.parsCount?this.parsCount+1:1,this.XMLloadingWarning=1,!l.childsCount||n||this._edsbps||l._has_top)var s=0;else var s=0;if(this.npl=0,e.each("item",function(n,o){return l.XMLload=1,this._parseItem(n,l,0,s),this._edsbps&&this.npl==this._edsbpsC?(this._distributedStart(e,o+1,t,i,l.childsCount),-1):void this.npl++},this,n),!i){if(e.each("userdata",function(t){this.setUserData(e.get("id"),t.get("name"),t.content())},this),l.XMLload=1,this.waitUpdateXML){this.waitUpdateXML=!1;for(var a=l.childsCount-1;a>=0;a--)l.childNodes[a]._dmark&&this.deleteItem(l.childNodes[a].id)}for(var a=(this._globalIdStorageFind(this.parsingOn),0);a<this.parsedArray.length;a++)l.htmlNode.childNodes[0].appendChild(this.parsedArray[a]);this.parsedArray=[],this.lastLoadedXMLId=t,this.XMLloadingWarning=0;for(var d=this.setCheckList.split(this.dlmtr),h=0;h<d.length;h++)d[h]&&this.setCheck(d[h],1);this.XMLsource&&this.tscheck&&this.smcheck&&l.id!=this.rootId&&(0===l.checkstate?this._setSubChecked(0,l):1===l.checkstate&&this._setSubChecked(1,l)),this._redrawFrom(this,null,n),e.get("order")&&"none"!=e.get("order")&&this._reorderBranch(l,e.get("order"),!0),""!=this.nodeAskingCall&&this.callEvent("onClick",[this.nodeAskingCall,this.getSelectedItemId()]),this._branchUpdate&&this._branchUpdateNext(e)}if(1==this.parsCount){if(this.parsingOn=null,this._srnd&&l.id!=this.rootId&&(this.prepareSR(l.id),this.XMLsource&&this.openItem(l.id)),e.through("item","open",null,function(e){this.openItem(e.get("id"))},this),!this._edsbps||!this._edsbpsA.length){var c=this;window.setTimeout(function(){c.callEvent("onXLE",[c,t])},1),this.xmlstate=0}this.skipLock=!1}this.parsCount--;var c=this;return this._edsbps&&window.setTimeout(function(){c._distributedStep(t)},this._edsbpsD),!i&&this.onXLE&&this.onXLE(this,t),this.nodeAskingCall}},dhtmlXTreeObject.prototype._redrawFrom=function(e,t,i,n){if(t)o=t;else{var o=e._globalIdStorageFind(e.lastLoadedXMLId);if(e.lastLoadedXMLId=-1,!o)return 0}for(var r=0,l=i?i-1:0;l<o.childsCount;l++)if(this._branchUpdate&&1!=this._getOpenState(o)||t&&1!=n||(o.childNodes[l].htmlNode.parentNode.parentNode.style.display=""),1==o.childNodes[l].openMe&&(this._openItem(o.childNodes[l]),o.childNodes[l].openMe=0),e._redrawFrom(e,o.childNodes[l]),null!=this.childCalc){if((o.childNodes[l].unParsed||!o.childNodes[l].XMLload&&this.XMLsource)&&(o.childNodes[l]._acc?o.childNodes[l].span.innerHTML=o.childNodes[l].label+this.htmlcA+o.childNodes[l]._acc+this.htmlcB:o.childNodes[l].span.innerHTML=o.childNodes[l].label),o.childNodes[l].childNodes.length&&this.childCalc){if(1==this.childCalc&&(o.childNodes[l].span.innerHTML=o.childNodes[l].label+this.htmlcA+o.childNodes[l].childsCount+this.htmlcB),2==this.childCalc){var s=o.childNodes[l].childsCount-(o.childNodes[l].pureChilds||0);s&&(o.childNodes[l].span.innerHTML=o.childNodes[l].label+this.htmlcA+s+this.htmlcB),o.pureChilds?o.pureChilds++:o.pureChilds=1}if(3==this.childCalc&&(o.childNodes[l].span.innerHTML=o.childNodes[l].label+this.htmlcA+o.childNodes[l]._acc+this.htmlcB),4==this.childCalc){var s=o.childNodes[l]._acc;s&&(o.childNodes[l].span.innerHTML=o.childNodes[l].label+this.htmlcA+s+this.htmlcB)}}else 4==this.childCalc&&r++;r+=o.childNodes[l]._acc,3==this.childCalc&&r++}o.unParsed||!o.XMLload&&this.XMLsource||(o._acc=r),e._correctLine(o),e._correctPlus(o),this.childCalc&&!t&&e._fixChildCountLabel(o)},dhtmlXTreeObject.prototype._createSelf=function(){var e=document.createElement("div");return e.className="containerTableStyle",e.style.width=this.width,e.style.height=this.height,this.parentObject.appendChild(e),e},dhtmlXTreeObject.prototype._xcloseAll=function(e){if(!e.unParsed){if(this.rootId!=e.id){if(!e.htmlNode)return;for(var t=e.htmlNode.childNodes[0].childNodes,i=t.length,n=1;i>n;n++)t[n].style.display="none";this._correctPlus(e)}for(var n=0;n<e.childsCount;n++)e.childNodes[n].childsCount&&this._xcloseAll(e.childNodes[n])}},dhtmlXTreeObject.prototype._xopenAll=function(e){this._HideShow(e,2);for(var t=0;t<e.childsCount;t++)this._xopenAll(e.childNodes[t])},dhtmlXTreeObject.prototype._correctPlus=function(e){if(e.htmlNode){var t=e.htmlNode.childNodes[0].childNodes[0].childNodes[0].lastChild,i=e.htmlNode.childNodes[0].childNodes[0].childNodes[2].childNodes[0],n=this.lineArray;if(this.XMLsource&&!e.XMLload){var n=this.plusArray;if(this._setSrc(i,this.iconURL+e.images[2]),this._txtimg)return t.innerHTML="[+]"}else if(e.childsCount||e.unParsed)if(e.htmlNode.childNodes[0].childNodes[1]&&"none"!=e.htmlNode.childNodes[0].childNodes[1].style.display){if(!e.wsign)var n=this.minusArray;if(this._setSrc(i,this.iconURL+e.images[1]),this._txtimg)return t.innerHTML="[-]"}else{if(!e.wsign)var n=this.plusArray;if(this._setSrc(i,this.iconURL+e.images[2]),this._txtimg)return t.innerHTML="[+]"}else this._setSrc(i,this.iconURL+e.images[0]);var o=2;e.treeNod.treeLinesOn?(e.parentObject&&(o=this._getCountStatus(e.id,e.parentObject)),this._setSrc(t,this.imPath+n[o])):this._setSrc(t,this.imPath+n[3])}},dhtmlXTreeObject.prototype._correctLine=function(e){if(e.htmlNode){var t=e.parentObject;if(t)if(0!=this._getLineStatus(e.id,t)&&this.treeLinesOn)for(var i=1;i<=e.childsCount&&e.htmlNode.childNodes[0].childNodes[i];i++)e.htmlNode.childNodes[0].childNodes[i].childNodes[0].style.backgroundImage="url("+this.imPath+this.lineArray[5]+")",e.htmlNode.childNodes[0].childNodes[i].childNodes[0].style.backgroundRepeat="repeat-y";else for(var i=1;i<=e.childsCount&&e.htmlNode.childNodes[0].childNodes[i];i++)e.htmlNode.childNodes[0].childNodes[i].childNodes[0].style.backgroundImage="",e.htmlNode.childNodes[0].childNodes[i].childNodes[0].style.backgroundRepeat=""}},dhtmlXTreeObject.prototype._getLineStatus=function(e,t){return t.childNodes[t.childsCount-1].id==e?0:1},dhtmlXTreeObject.prototype._HideShow=function(e,t){if(!this._locker||this.skipLock||!this._locker[e.id]){if(this.XMLsource&&!e.XMLload){if(1==t)return;return e.XMLload=1,void this._loadDynXML(e.id)}e.unParsed&&this.reParse(e);var i=e.htmlNode.childNodes[0].childNodes,n=i.length;if(n>1){"none"==i[1].style.display&&1!=t||2==t?nodestyle="":(this.allTree.childNodes[0].border="1",this.allTree.childNodes[0].border="0",nodestyle="none");for(var o=1;n>o;o++)i[o].style.display=nodestyle}this._correctPlus(e)}},dhtmlXTreeObject.prototype._getOpenState=function(e){if(!e.htmlNode)return 0;var t=e.htmlNode.childNodes[0].childNodes;return t.length<=1?0:"none"!=t[1].style.display?1:-1},dhtmlXTreeObject.prototype.onRowClick2=function(){var e=this.parentObject.treeNod;return e.callEvent("onDblClick",[this.parentObject.id,e])?(this.parentObject.closeble&&"0"!=this.parentObject.closeble?e._HideShow(this.parentObject):e._HideShow(this.parentObject,2),e.checkEvent("onOpenEnd")&&(e.xmlstate?(e._oie_onXLE.push(e.onXLE),e.onXLE=e._epnFHe):e.callEvent("onOpenEnd",[this.parentObject.id,e._getOpenState(this.parentObject)])),!1):!1},dhtmlXTreeObject.prototype.onRowClick=function(){var e=this.parentObject.treeNod;return e.callEvent("onOpenStart",[this.parentObject.id,e._getOpenState(this.parentObject)])?(this.parentObject.closeble&&"0"!=this.parentObject.closeble?e._HideShow(this.parentObject):e._HideShow(this.parentObject,2),void(e.checkEvent("onOpenEnd")&&(e.xmlstate?(e._oie_onXLE.push(e.onXLE),e.onXLE=e._epnFHe):e.callEvent("onOpenEnd",[this.parentObject.id,e._getOpenState(this.parentObject)])))):0},dhtmlXTreeObject.prototype.getSelectedItemId=function(){for(var e=new Array,t=0;t<this._selected.length;t++)e[t]=this._selected[t].id;return e.join(this.dlmtr)},dhtmlXTreeObject.prototype._selectItem=function(e,t){if(this.checkEvent("onSelect")&&(this._onSSCFold=this.getSelectedItemId()),this._amsel&&t&&(t.ctrlKey||t.metaKey||t.shiftKey)||this._unselectItems(),e.i_sel&&this._amsel&&t&&(t.ctrlKey||t.metaKey))this._unselectItem(e);else if(!(e.i_sel||this._amselS&&0!=this._selected.length&&this._selected[0].parentObject!=e.parentObject))if(this._amsel&&t&&t.shiftKey&&0!=this._selected.length&&this._selected[this._selected.length-1].parentObject==e.parentObject){var i=this._getIndex(this._selected[this._selected.length-1]),n=this._getIndex(e);if(i>n){var o=i;i=n,n=o}for(var r=i;n>=r;r++)e.parentObject.childNodes[r].i_sel||this._markItem(e.parentObject.childNodes[r])}else this._markItem(e);if(this.checkEvent("onSelect")){var l=this.getSelectedItemId();l!=this._onSSCFold&&this.callEvent("onSelect",[l])}},dhtmlXTreeObject.prototype._markItem=function(e){e.scolor&&(e.span.style.color=e.scolor),e.span.className="selectedTreeRow",e.span.parentNode.parentNode.className="selectedTreeRowFull",e.i_sel=!0,this._selected[this._selected.length]=e},dhtmlXTreeObject.prototype.getIndexById=function(e){var t=this._globalIdStorageFind(e);return t?this._getIndex(t):null},dhtmlXTreeObject.prototype._getIndex=function(e){for(var t=e.parentObject,i=0;i<t.childsCount;i++)if(t.childNodes[i]==e)return i},dhtmlXTreeObject.prototype._unselectItem=function(e){if(e&&e.i_sel){e.span.className="standartTreeRow",e.span.parentNode.parentNode.className="",e.acolor&&(e.span.style.color=e.acolor),e.i_sel=!1;for(var t=0;t<this._selected.length;t++)if(!this._selected[t].i_sel){this._selected.splice(t,1);break}}},dhtmlXTreeObject.prototype._unselectItems=function(){for(var e=0;e<this._selected.length;e++){var t=this._selected[e];t.span.className="standartTreeRow",t.span.parentNode.parentNode.className="",t.acolor&&(t.span.style.color=t.acolor),t.i_sel=!1}this._selected=new Array},dhtmlXTreeObject.prototype.onRowSelect=function(e,t,i){e=e||window.event;var n=this.parentObject;t&&(n=t.parentObject);var o=n.treeNod,r=o.getSelectedItemId();e&&e.skipUnSel||o._selectItem(n,e),i||(n.actionHandler?n.actionHandler(n.id,r):o.callEvent("onClick",[n.id,r]))},dhtmlXTreeObject.prototype._createItem=function(e,t,i){var n=document.createElement("table");n.cellSpacing=0,n.cellPadding=0,n.border=0,this.hfMode&&(n.style.tableLayout="fixed"),n.style.margin=0,n.style.padding=0;var o=document.createElement("tbody"),r=document.createElement("tr"),l=document.createElement("td");if(l.className="standartTreeImage",this._txtimg){var s=document.createElement("div");l.appendChild(s),s.className="dhx_tree_textSign"}else{var s=this._getImg(t.id);s.border="0","IMG"==s.tagName&&(s.align="absmiddle"),l.appendChild(s),s.style.padding=0,s.style.margin=0,s.style.width=this.def_line_img_x}var a=document.createElement("td"),d=this._getImg(this.cBROf?this.rootId:t.id);d.checked=0,this._setSrc(d,this.imPath+this.checkArray[0]),d.style.width="18px",d.style.height="18px",e||(a.style.display="none"),a.appendChild(d),this.cBROf||"IMG"!=d.tagName||(d.align="absmiddle"),d.onclick=this.onCheckBoxClick,d.treeNod=this,d.parentObject=t,window._KHTMLrv?a.width="16px":a.width="20px";var h=document.createElement("td");h.className="standartTreeImage";var c=this._getImg(this.timgen?t.id:this.rootId);c.onmousedown=this._preventNsDrag,c.ondragstart=this._preventNsDrag,c.border="0",this._aimgs&&(c.parentObject=t,
"IMG"==c.tagName&&(c.align="absmiddle"),c.onclick=this.onRowSelect),i||this._setSrc(c,this.iconURL+this.imageArray[0]),h.appendChild(c),c.style.padding=0,c.style.margin=0,this.timgen?(h.style.width=c.style.width=this.def_img_x,c.style.height=this.def_img_y):(c.style.width="0px",c.style.height="0px",(_isOpera||window._KHTMLrv)&&(h.style.display="none"));var u=document.createElement("td");return u.className="dhxTextCell standartTreeRow",t.span=document.createElement("span"),t.span.className="standartTreeRow",this.mlitems?(t.span.style.width=this.mlitems,t.span.style.display="block"):u.noWrap=!0,dhx4.isIE8?u.style.width="99999px":window._KHTMLrv||(u.style.width="100%"),t.span.innerHTML=t.label,u.appendChild(t.span),u.parentObject=t,l.parentObject=t,u.onclick=this.onRowSelect,l.onclick=this.onRowClick,u.ondblclick=this.onRowClick2,this.ettip&&(r.title=t.label),this.dragAndDropOff&&(this._aimgs&&(this.dragger.addDraggableItem(h,this),h.parentObject=t),this.dragger.addDraggableItem(u,this)),t.span.style.paddingLeft="5px",t.span.style.paddingRight="5px",u.style.verticalAlign="",u.style.fontSize="10pt",u.style.cursor=this.style_pointer,r.appendChild(l),r.appendChild(a),r.appendChild(h),r.appendChild(u),o.appendChild(r),n.appendChild(o),(this.ehlt||this.checkEvent("onMouseIn")||this.checkEvent("onMouseOut"))&&(r.onmousemove=this._itemMouseIn,r[_isIE?"onmouseleave":"onmouseout"]=this._itemMouseOut),n},dhtmlXTreeObject.prototype.setOnRightClickHandler=function(e){this.attachEvent("onRightClick",e)},dhtmlXTreeObject.prototype.setOnClickHandler=function(e){this.attachEvent("onClick",e)},dhtmlXTreeObject.prototype.setOnSelectStateChange=function(e){this.attachEvent("onSelect",e)},dhtmlXTreeObject.prototype.setXMLAutoLoading=function(e){this.XMLsource=e},dhtmlXTreeObject.prototype.setOnCheckHandler=function(e){this.attachEvent("onCheck",e)},dhtmlXTreeObject.prototype.setOnOpenHandler=function(e){this.attachEvent("onOpenStart",e)},dhtmlXTreeObject.prototype.setOnOpenStartHandler=function(e){this.attachEvent("onOpenStart",e)},dhtmlXTreeObject.prototype.setOnOpenEndHandler=function(e){this.attachEvent("onOpenEnd",e)},dhtmlXTreeObject.prototype.setOnDblClickHandler=function(e){this.attachEvent("onDblClick",e)},dhtmlXTreeObject.prototype.openAllItems=function(e){var t=this._globalIdStorageFind(e);return t?void this._xopenAll(t):0},dhtmlXTreeObject.prototype.getOpenState=function(e){var t=this._globalIdStorageFind(e);return t?this._getOpenState(t):""},dhtmlXTreeObject.prototype.closeAllItems=function(e){e===window.undefined&&(e=this.rootId);var t=this._globalIdStorageFind(e);return t?(this._xcloseAll(t),this.allTree.childNodes[0].border="1",void(this.allTree.childNodes[0].border="0")):0},dhtmlXTreeObject.prototype.setUserData=function(e,t,i){var n=this._globalIdStorageFind(e,0,!0);n&&("hint"==t&&(n.htmlNode.childNodes[0].childNodes[0].title=i),"undefined"==typeof n.userData["t_"+t]&&(n._userdatalist?n._userdatalist+=","+t:n._userdatalist=t),n.userData["t_"+t]=i)},dhtmlXTreeObject.prototype.getUserData=function(e,t){var i=this._globalIdStorageFind(e,0,!0);if(i)return i.userData["t_"+t]},dhtmlXTreeObject.prototype.getItemColor=function(e){var t=this._globalIdStorageFind(e);if(!t)return 0;var i=new Object;return t.acolor&&(i.acolor=t.acolor),t.scolor&&(i.scolor=t.scolor),i},dhtmlXTreeObject.prototype.setItemColor=function(e,t,i){if(e&&e.span)var n=e;else var n=this._globalIdStorageFind(e);return n?(n.i_sel?(i||t)&&(n.span.style.color=i||t):t&&(n.span.style.color=t),i&&(n.scolor=i),t&&(n.acolor=t),void 0):0},dhtmlXTreeObject.prototype.setOnMouseInHandler=function(e){this.ehlt=!0,this.attachEvent("onMouseIn",e)},dhtmlXTreeObject.prototype.setOnMouseOutHandler=function(e){this.ehlt=!0,this.attachEvent("onMouseOut",e)},dhtmlXTreeObject.prototype.enableTreeLines=function(e){this.treeLinesOn=dhx4.s2b(e)},dhtmlXTreeObject.prototype.openItem=function(e){this.skipLock=!0;var t=this._globalIdStorageFind(e);return t?this._openItem(t):0},dhtmlXTreeObject.prototype._openItem=function(e){var t=this._getOpenState(e);if(0>t||this.XMLsource&&!e.XMLload){if(!this.callEvent("onOpenStart",[e.id,t]))return 0;this._HideShow(e,2),this.checkEvent("onOpenEnd")&&(this.onXLE==this._epnFHe&&this._epnFHe(this,e.id,!0),this.xmlstate&&this.XMLsource?(this._oie_onXLE.push(this.onXLE),this.onXLE=this._epnFHe):this.callEvent("onOpenEnd",[e.id,this._getOpenState(e)]))}else this._srnd&&this._HideShow(e,2);e.parentObject&&!this._skip_open_parent&&this._openItem(e.parentObject)},dhtmlXTreeObject.prototype._getAllFatItems=function(e){for(var t="",i=0;i<e.childsCount;i++)if(e.childNodes[i].unParsed||e.childNodes[i].childsCount>0){if(t?t+=this.dlmtr+e.childNodes[i].id:t=""+e.childNodes[i].id,e.childNodes[i].unParsed)var n=this._getAllFatItemsXML(e.childNodes[i].unParsed,1);else var n=this._getAllFatItems(e.childNodes[i]);n&&(t+=this.dlmtr+n)}return t},dhtmlXTreeObject.prototype.selectItem=function(e,t,i){t=dhx4.s2b(t);var n=this._globalIdStorageFind(e);if(!n||!n.parentObject)return 0;this.XMLloadingWarning?n.parentObject.openMe=1:this._openItem(n.parentObject);var o=null;i&&(o=new Object,o.ctrlKey=!0,n.i_sel&&(o.skipUnSel=!0)),t?this.onRowSelect(o,n.htmlNode.childNodes[0].childNodes[0].childNodes[3],!1):this.onRowSelect(o,n.htmlNode.childNodes[0].childNodes[0].childNodes[3],!0)},dhtmlXTreeObject.prototype._compressChildList=function(e,t){e--;for(var i=0;e>i;i++)0==t[i]&&(t[i]=t[i+1],t[i+1]=0)},dhtmlXTreeObject.prototype._deleteNode=function(e,t,i){if(!t||!t.parentObject)return 0;var n=0,o=0;t.tr.nextSibling&&(n=t.tr.nextSibling.nodem),t.tr.previousSibling&&(o=t.tr.previousSibling.nodem);for(var r=t.parentObject,l=r.childsCount,s=r.childNodes,a=0;l>a;a++)if(s[a].id==e){i||r.htmlNode.childNodes[0].removeChild(s[a].tr),s[a]=0;break}this._compressChildList(l,s),i||r.childsCount--,n&&(this._correctPlus(n),this._correctLine(n)),o&&(this._correctPlus(o),this._correctLine(o)),this.tscheck&&this._correctCheckStates(r),i||this._globalIdStorageRecSub(t)},dhtmlXTreeObject.prototype.deleteChildItems=function(e){var t=this._globalIdStorageFind(e);if(t)for(var i=t.childsCount,n=0;i>n;n++)this._deleteNode(t.childNodes[0].id,t.childNodes[0])},dhtmlXTreeObject.prototype._globalIdStorageRecSub=function(e){for(var t=0;t<e.childsCount;t++)this._globalIdStorageRecSub(e.childNodes[t]),this._globalIdStorageSub(e.childNodes[t].id);this._globalIdStorageSub(e.id);var i=e;i.span=null,i.tr.nodem=null,i.tr=null,i.htmlNode=null},dhtmlXTreeObject.prototype._autoScroll=function(e,t,i){this.autoScroll&&(e&&(t=dhx4.absTop(e),i=dhx4.absTop(this.allTree)-this.allTree.scrollTop),t-i-parseInt(this.allTree.scrollTop)>parseInt(this.allTree.offsetHeight)-50&&(this.allTree.scrollTop=parseInt(this.allTree.scrollTop)+20),t-i<parseInt(this.allTree.scrollTop)+30&&(this.allTree.scrollTop=parseInt(this.allTree.scrollTop)-20))},dhtmlXTreeObject.prototype.enableTextSigns=function(e){this._txtimg=dhx4.s2b(e)},dhtmlXTreeObject.prototype.preventIECaching=function(e){dhx4.ajax.cache=!e},dhtmlXTreeObject.prototype.preventIECashing=dhtmlXTreeObject.prototype.preventIECaching,dhtmlXTreeObject.prototype.setIconSize=function(e,t,i){if(i){if(i&&i.span)var n=i;else var n=this._globalIdStorageFind(i);if(!n)return 0;var o=n.span.parentNode.previousSibling.childNodes[0];e&&(o.style.width=e+"px",window._KHTMLrv&&(o.parentNode.style.width=e+"px")),t&&(o.style.height=t+"px",window._KHTMLrv&&(o.parentNode.style.height=t+"px"))}else this.def_img_x=e+"px",this.def_img_y=t+"px"},dhtmlXTreeObject.prototype.enableSingleRadioMode=function(e){this._frbtrs=dhx4.s2b(e)},dhtmlXTreeObject.prototype.openOnItemAdded=function(e){this._hAdI=!dhx4.s2b(e)},dhtmlXTreeObject.prototype.openOnItemAdding=function(e){this._hAdI=!dhx4.s2b(e)},dhtmlXTreeObject.prototype.getAllItemsWithKids=function(){return this._getAllFatItems(this.htmlNode)},dhtmlXTreeObject.prototype.setSkin=function(e){var t=this.parentObject.className.replace(/dhxtree_[^ ]*/gi,"");this.parentObject.className=t+" dhxtree_"+e,"dhx_terrace"!=e&&"dhx_web"!=e&&"material"!=e||this.enableTreeLines(!1),"material"==e&&this.setIconSize("25","25")},jsonPointer.prototype={text:function(){var e=function(e){for(var i=[],n=0;n<e.length;n++)i.push("{"+t(e[n])+"}");return i.join(",")},t=function(i){var n=[];for(var o in i)"object"==typeof i[o]?o.length?n.push('"'+o+'":['+e(i[o])+"]"):n.push('"'+o+'":{'+t(i[o])+"}"):n.push('"'+o+'":"'+i[o]+'"');return n.join(",")};return"{"+t(this.d)+"}"},get:function(e){return this.d[e]},exists:function(){return!!this.d},content:function(){return this.d.content},each:function(e,t,i){var n=this.d[e],o=new jsonPointer;if(n)for(var r=0;r<n.length;r++)o.d=n[r],t.apply(i,[o,r])},get_all:function(){return this.d},sub:function(e){return new jsonPointer(this.d[e],this.d)},sub_exists:function(e){return!!this.d[e]},each_x:function(e,t,i,n,o){var r=this.d[e],l=new jsonPointer(0,this.d);if(r)for(o=o||0;o<r.length;o++)if(r[o][t]&&(l.d=r[o],-1==i.apply(n,[l,o])))return},up:function(e){return new jsonPointer(this.dp,this.d)},set:function(e,t){this.d[e]=t},clone:function(e){return new jsonPointer(this.d,this.dp)},through:function(e,t,i,n,o){var r=this.d[e];if(r.length)for(var l=0;l<r.length;l++){if(null!=r[l][t]&&""!=r[l][t]&&(!i||r[l][t]==i)){var s=new jsonPointer(r[l],this.d);n.apply(o,[s,l])}var a=this.d;this.d=r[l],this.sub_exists(e)&&this.through(e,t,i,n,o),this.d=a}}},dhtmlXTreeObject.prototype.loadJSONObject=function(e,t){return window.console&&window.console.info&&window.console.info("loadJSONObject was deprecated","http://docs.dhtmlx.com/migration__index.html#migrationfrom43to44"),this._loadJSONObject(e,t)},dhtmlXTreeObject.prototype._loadJSONObject=function(e,t){this.parsCount||this.callEvent("onXLS",[this,null]),this.xmlstate=1;var i=new jsonPointer(e);this._parse(i),this._p=i,t&&t()},window.addEventListener?window.addEventListener("load",dhx_init_trees,!1):window.attachEvent&&window.attachEvent("onload",dhx_init_trees);var style=document.createElement("style");style.innerHTML='@keyframes dhx_loader_rotate{100%{transform:rotate(360deg);}}@keyframes dhx_loader_dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124px;}}.dhtmlxMenu_material_Middle{position:relative;height:28px;line-height:28px;background-color:#f5f5f5;overflow:hidden;border:none;font-size:14px;font-family:Roboto,Arial,Helvetica;color:#404040;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Normal,.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Disabled,.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Selected{position:relative;float:left;font:inherit;height:28px;line-height:28px;margin:0;padding:0 8px;cursor:default;white-space:nowrap;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Normal div.top_level_text,.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Disabled div.top_level_text,.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Selected div.top_level_text{float:left;margin:0 3px;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Normal i,.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Disabled i,.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Selected i{height:inherit;line-height:inherit;float:left;color:inherit;margin:0 4px;font-size:1.2em;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Disabled{color:#a6a6a6;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_material_TopLevel_Item_Selected{background-color:#ebebeb;}.dhtmlxMenu_material_Middle img.dhtmlxMenu_TopLevel_Item_Icon{float:left;margin:5px 3px 0 3px;width:18px;height:18px;cursor:default;}.dhtmlxMenu_material_Middle div.top_sep{position:relative;float:left;height:22px;width:0;border-left:1px solid #dfdfdf;margin:3px 8px 0 8px;font-size:1px;overflow:hidden;cursor:default;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_TopLevel_Text_right,.dhtmlxMenu_material_Middle div.dhtmlxMenu_TopLevel_Text_left{position:absolute;top:0;height:28px;line-height:28px;cursor:default;font-size:14px;font-family:Roboto,Arial,Helvetica;color:#404040;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_TopLevel_Text_right{right:6px;}.dhtmlxMenu_material_Middle div.dhtmlxMenu_TopLevel_Text_left{left:6px;}div.dhtmlxMenu_material_SubLevelArea_Polygon{position:absolute;padding:5px 0;background-color:#fafafa;overflow:hidden;cursor:default;line-height:normal;overflow-y:auto;-webkit-overflow-scrolling:touch;-webkit-tap-highlight-color:rgba(0,0,0,0);box-shadow:0 1px 3px rgba(0,0,0,0.12),0 1px 2px rgba(0,0,0,0.24);-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}div.dhtmlxMenu_material_SubLevelArea_Polygon td{padding:0;margin:0;line-height:normal;white-space:nowrap;font-size:14px;font-family:Roboto,Arial,Helvetica;color:#404040;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon{width:18px;text-align:center;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon img.sub_icon{margin:4px 6px 0 6px;width:18px;height:18px;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon i{width:18px;height:30px;line-height:29px;margin:0 6px;font-size:1.2em;text-align:center;color:inherit;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon div.sub_icon{margin:0 6px;width:18px;height:30px;line-height:30px;background-position:0 5px;background-repeat:no-repeat;background-image:url("imgs/dhxmenu_material/dhxmenu_chrd.png");}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon div.sub_icon.chbx_0{background-position:0 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon div.sub_icon.chbx_1{background-position:-18px 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon div.sub_icon.rdbt_0{background-position:-72px 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_icon div.sub_icon.rdbt_1{background-position:-90px 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_text div.sub_item_text{position:relative;height:30px;line-height:30px;padding:0 22px 0 1px;overflow:hidden;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_hk{padding:0 10px 0 8px;}div.dhtmlxMenu_material_SubLevelArea_Polygon td.sub_item_hk div.sub_item_hk{color:#8d8d8d;font-size:12px;text-align:right;}div.dhtmlxMenu_material_SubLevelArea_Polygon td div.complex_arrow{float:right;width:10px;margin:0 1px 0 11px;height:30px;line-height:30px;background-image:url("imgs/dhxmenu_material/dhxmenu_subar.png");background-repeat:no-repeat;background-position:0 10px;overflow:hidden;font-size:1px;}div.dhtmlxMenu_material_SubLevelArea_Polygon td div.complex_arrow_loading{width:16px;height:30px;line-height:30px;background-position:center center;background-repeat:no-repeat;background-image:url("imgs/dhxmenu_material/dhxmenu_loader.gif");float:right;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_selected td{background-color:#ebebeb;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_selected td div.complex_arrow{background-position:-10px 10px;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td.sub_item_hk div.sub_item_hk{color:#c0c0c0;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td div.sub_item_text,div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td td.sub_item_icon i{color:#a6a6a6;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td div.complex_arrow{background-position:-20px 10px;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td div.sub_icon.chbx_0{background-position:-36px 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td div.sub_icon.chbx_1{background-position:-54px 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td div.sub_icon.rdbt_0{background-position:-108px 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td div.sub_icon.rdbt_1{background-position:-126px 5px;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_item_dis td i{color:#a6a6a6;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_sep td{padding:5px 3px;}div.dhtmlxMenu_material_SubLevelArea_Polygon tr.sub_sep td div.sub_sep{position:relative;font-size:1px;line-height:1px;height:0;width:100%;border-top:1px solid #dfdfdf;}div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowUp,div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowUp_Over,div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowUp_Disabled{position:relative;font-size:1px;border-bottom:1px solid #dfdfdf;background-image:url("imgs/dhxmenu_material/dhxmenu_arrow_up.png");background-repeat:no-repeat;background-position:center 2px;padding:8px 0;margin-bottom:3px;}div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowUp_Disabled{background-image:url("imgs/dhxmenu_material/dhxmenu_arrow_up_dis.png");}div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowDown,div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowDown_Over,div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowDown_Disabled{position:relative;font-size:1px;border-top:1px solid #dfdfdf;background-image:url("imgs/dhxmenu_material/dhxmenu_arrow_down.png");background-repeat:no-repeat;background-position:center 6px;padding:8px 0;margin-top:3px;}div.dhtmlxMenu_material_SubLevelArea_Polygon div.dhtmlxMenu_material_SubLevelArea_ArrowDown_Disabled{background-image:url("imgs/dhxmenu_material/dhxmenu_arrow_down_dis.png");}iframe.dhtmlxMenu_IE6CoverFix_material{position:absolute;border:none;background:#000;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=100);}.dhtmlxMenu_material_Middle.dir_left div.align_left{float:left;}.dhtmlxMenu_material_Middle.dir_left div.align_right{float:right;}.dhxmenu_skin_detect{position:absolute;left:0;top:-100px;margin:0;padding:0;border:0 solid white;width:40px;height:10px;overflow:hidden;}@keyframes dhx_loader_rotate{100%{transform:rotate(360deg);}}@keyframes dhx_loader_dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124px;}}.defaultTreeTable{margin:0;padding:0;border:0;}.containerTableStyle{overflow:auto;-webkit-overflow-scrolling:touch;position:relative;top:0;font-size:12px;-khtml-user-select:none;}.containerTableStyleRTL span{direction:rtl;unicode-bidi:bidi-override;}.containerTableStyleRTL{direction:rtl;overflow:auto;position:relative;top:0;font-size:12px;}.standartTreeRow{font-family:Roboto,Arial,Helvetica;font-size:;-moz-user-select:none;line-height:24px;}.selectedTreeRow{font-family:Roboto,Arial,Helvetica;font-size:;-moz-user-select:none;background-color:#eee;color:#39c;}.dhxtree_material .selectedTreeRowFull .dhxTextCell{background-color:#eee;color:#39c;}.dragAndDropRow{color:#39c;}.standartTreeRow_lor{text-decoration:underline;background-color:;font-family:Roboto,Arial,Helvetica;font-size:;-moz-user-select:none;}.standartTreeImage{height:24px;overflow:hidden;border:0;padding:0;margin:0;font-size:1px;}.standartTreeImage img{width:18px;height:24px;background-position:center center;background-repeat:no-repeat;border:0;padding:0;margin:0;font-size:1px;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.hiddenRow{width:1px;overflow:hidden;}.dragSpanDiv,.dragSpanDiv td{font-family:Roboto,Arial,Helvetica;font-size:;line-height:;vertical-align:center;background-color:white;z-index:999;}.dragSpanDiv td{padding:5px;}.a_dhx_hidden_input{position:absolute;top:-1px;left:-1px;width:1px;height:1px;border:none;background:none;}.a_dhx_hidden_input{position:absolute;top:-1px;left:-1px;width:1px;height:1px;border:none;background:none;}.selectionBar{top:0;background-color:black;position:absolute;overflow:hidden;height:2px;z-index:11;}.intreeeditRow{font-size:8pt;height:16px;border:1px solid silver;padding:0;margin:0;margin-left:4px;-moz-user-select:text;-khtml-user-select:text;}.dhx_tree_textSign{font-size:8pt;font-family:monospace;width:21px;color:;padding:0;margin:0;cursor:pointer;text-align:center;}.dhx_tree_opacity{opacity:0;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.dhx_bg_img_fix{width:18px;height:24px;background-repeat:no-repeat;background-position:center;background-position-x:center;background-position-y:center;}.dhxtree_skin_detect{position:absolute;left:0;top:-100px;margin:0;padding:0;border:0 solid white;width:40px;height:10px;overflow:hidden;}',document.head.appendChild(style);var layaair_debug_view={};window.layaair_debug_view=layaair_debug_view,layaair_debug_view.initLayaAirDebugView=function(e){e.style.border="1px solid black";var t=Math.min(250,.3*e.offsetWidth),i='<div class="top-banner">\n</div>\n<div>\n<div style="overflow:hidden; border-bottom:1px solid #444; padding:5px">\n<div style="float:left">\n<button id="node_functionality_control">审查元素</button>\n<button id="refresh_control">刷新</button>\n</div>\n<div style="float:right">\n<input type="checkbox" id="show_current_cache_control">显示当前cache重绘</input>\n<input type="checkbox" id="show_all_cache_control">显示所有cache区域</input>\n<input type="checkbox" id="show_atlas_control">显示大图合集</input>\n</div>\n</div>\n<div class="hgroup">\n<div style="float:left;width:'+t+'px; border-right:1px solid black" id="tree_container"></div>\n<div style="overflow:hidden">\n<div id="content_toolbar" style="width:100%;margin:10px"><button id="log_info_control">打印到控制台</button>\n<button id="enabled_node_chain_control">enable链</button>\n<button id="size_chain_control">size链</button>\n<input type="checkbox" id="visibility_control">可见</input>\n<input type="checkbox" id="show_border_control">显示边框</input>\n</div><div style="overflow:auto"><table id="content_table" style="border:1px solid #cccccc;border-collapse:collapse"></table>\n</div></div>\n</div>\n</div>';e.innerHTML=i,this.container=e,this.tree=new dhtmlXTreeObject(tree_container,"100%","100%",0),node_functionality_control.onclick=function(e){e.stopPropagation(),layaair_debug_view.on_inspect_element_callback(),node_functionality_control.style.backgroundColor="#FFF",node_functionality_control.style.color="rgb(107, 163, 255)"}},layaair_debug_view.setTree=function(e){for(var t=this.tree.getAllItemsWithKids().split(","),i=[],n=0;n<t.length;n++){var o=t[n],r=this.tree.getOpenState(o);1==r&&i.push(o)}this.tree.deleteChildItems(0),this.tree.parse(e,"json");for(var n=0;n<i.length;n++)this.tree.openItem(i[n])},layaair_debug_view.resize=function(e,t){this.container.style.width=e+"px",this.container.style.height=t+"px";var i=this.container.offsetHeight-tree_container.offsetTop;tree_container.style.height=i+"px",content_toolbar.style.width=e-tree_container.offsetWidth+"px",content_table.parentElement.style.height=i-content_toolbar.offsetHeight-21+"px",content_table.style.width=e-tree_container.offsetWidth-16+"px"},layaair_debug_view.bounceUpInspectButton=function(){node_functionality_control.style.backgroundColor="buttonface",node_functionality_control.style.color="black"},layaair_debug_view.setValueInputHandler=function(e){this.value_input_callback=e},layaair_debug_view.setValueChangeHandler=function(e){this.value_change_callback=e},layaair_debug_view.addContent=function(e){var t=document.createElement("tr");t.innerHTML='<td style="width:100px;font-size:13px;border:1px solid #CCC;padding-left:10px">'+e.key+'</td>\n<td style="width:200px;border:1px solid #CCC;"><input style="border:none;width:100%;height:25px;padding-left:10px;" value='+e.value+"></td>",content_table.appendChild(t);var i=t.lastElementChild.lastElementChild;i.data=e,i.oninput=function(e){this.value_input_callback&&this.value_input_callback(e.target.data,e.target.value)}.bind(this),i.onchange=function(e){this.value_change_callback&&this.value_change_callback(e.target.data,e.target.value)}.bind(this)},layaair_debug_view.setContents=function(e){content_table.innerHTML="";for(var t=0;t<e.length;t++){var i=e[t];this.addContent(i)}},layaair_debug_view.changeValueAt=function(e,t){content_table.children[e].lastElementChild.firstElementChild.value=t},layaair_debug_view.changeValueByLabel=function(e,t){for(var i=content_table.children.length-1;i>=0;i--)if(content_table.children[i].firstElementChild.innerText==e){content_table.children[i].lastElementChild.firstElementChild.value=t;break}},layaair_debug_view.setVisibility=function(e){visibility_control.checked=!!e},layaair_debug_view.setShowDebugBorder=function(e){show_border_control.checked=!!e},layaair_debug_view.getVisibility=function(){return visibility_control.checked},layaair_debug_view.getShowDebugBorder=function(){return show_border_control.checked},layaair_debug_view.getShowCurrentCache=function(){return show_current_cache_control.checked},layaair_debug_view.getShowAllCache=function(){return show_all_cache_control.checked},layaair_debug_view.getShowAtlas=function(){return show_atlas_control.checked},layaair_debug_view.onInspectElement=function(e){this.on_inspect_element_callback=e},layaair_debug_view.onLogInfo=function(e){log_info_control.onclick=e},layaair_debug_view.onRefresh=function(e){refresh_control.onclick=e},layaair_debug_view.onPrintEnabledNodeChain=function(e){enabled_node_chain_control.onclick=e},layaair_debug_view.onPrintSizeChain=function(e){size_chain_control.onclick=e},layaair_debug_view.onToggleVisibility=function(e){visibility_control.onchange=e},layaair_debug_view.onToggleDebugBorder=function(e){show_border_control.onchange=e},layaair_debug_view.onToggleShowCurrentCache=function(e){show_current_cache_control.onchange=e},layaair_debug_view.onToggleShowAllCache=function(e){show_all_cache_control.onchange=e},layaair_debug_view.onToggleShowAtlas=function(e){show_atlas_control.onchange=e};";
		public static function init():void
		{
			var script:String;
			script = Base64Tool.decodeToByte(data).readUTFBytes();
			Browser.window.eval(script);
		}
	}

}